<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--最小配置-->
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.chinaunicom.naturalperson</groupId>
    <artifactId>na-test</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>multithread</module>
        <module>javabasis</module>
        <module>workcontext</module>
        <module>springboot</module>
    </modules>
    <name>localtest</name>    <!--项目的名称代号-->
    <packaging>pom</packaging> <!--默认为jar包-->
    <url>http://repo1.maven.org/maven2/</url>      <!--项目的官网URL,不重要，此处使用了maven中央仓库地址-->
   <properties>
       <spring.version>4.1.1.RELEASE</spring.version>
       <druid.version>1.0.21</druid.version>
   </properties>
    <!--依赖管理-->
    <dependencies>

        <!--<dependency>
            <groupId>abclient</groupId>
            <artifactId>abclient-test</artifactId>
            <version>1.6</version>
            <optional>true</optional>   可选依赖几乎不用，其他maven项目引本项目时，不会传递依赖该jar包
              <dependency>
            <groupId>com.chinaunicom.naturalperson</groupId>
            <artifactId>hsf_interface</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        </dependency>-->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20160810</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/aopalliance/aopalliance -->
        <dependency>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-pool/commons-pool -->
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.5.4</version>
        </dependency>

        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.9</version>
        </dependency>



    </dependencies>

    <!--构建部分-->
    <build>
        <pluginManagement><!--  插件管理lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <!-- 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>     <!--此插件是Maven官方插件，可以省略 groupId-->
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>1.7</source>     <!--编译1.7版本的源文件，生成与JVM1.7兼容的字节码文件-->
                        <target>1.7</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <!--使用 java -jar jar包  可以main方法执行-->
                            <mainClass>com.natural.test.ExecuteShell</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>   <!--插件执行配置-->
                    <execution>
                        <id>make-assembly</id>  <!--配置了一个id为make-assembly 的任务-->
                        <phase>package</phase>  <!--通过phase配置绑定到package 生命周期阶段上，-->
                        <goals>                 <!--再通过goal指定要执行插件的目标-->
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>
    <!--报表部分,我们执行mvn site就可以为项目生成一系列可以用来描述项目信息的网页-->
    <reporting>
    </reporting>

    <!--<repositories>-->

    <!--<repository>-->
    <!--<id>alimaven</id>-->
    <!--<name>aliyun maven</name>-->
    <!--<url>https://maven.aliyun.com/repository/public</url>-->
    <!--<snapshots>-->
    <!--<enabled>false</enabled>-->
    <!--</snapshots>-->
    <!--<releases>-->
    <!--<enabled>true</enabled>-->
    <!--</releases>-->
    <!--</repository>-->
    <!--</repositories>-->
</project>
